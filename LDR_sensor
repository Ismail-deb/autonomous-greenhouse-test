const int ldrAnalogPin = 34; // Connect the AO pin of your LDR module to ESP32 GPIO34

void setup() {
  Serial.begin(115200); // Initialize serial communication at 115200 baud rate
  Serial.println("4-Pin LDR Module - Analog Output (AO) Test");
  Serial.println("----------------------------------------");

  // The ESP32's ADC has a default resolution of 12 bits (0-4095).
  // This is usually sufficient. You can explicitly set it if needed:
  // analogReadResolution(12);

  // Default ADC attenuation is usually fine for 0-3.3V input.
  // No need to set it unless your module outputs a voltage outside this range.
}

void loop() {
  // Read the analog value from the LDR module's AO pin
  int ldrRawValue = analogRead(ldrAnalogPin);

  // Print the raw analog value (0-4095 for 12-bit resolution)
  Serial.print("Raw Analog Light Value (AO): ");
  Serial.println(ldrRawValue);

  // --- Interpretation of the Raw Value ---
  // Typically, for these LDR modules:
  //   - More light -> Higher voltage on AO -> Higher ldrRawValue
  //   - Less light -> Lower voltage on AO -> Lower ldrRawValue
  // (This can vary based on the exact circuit, but is common for LDR modules)

  // You can create a simple qualitative brightness indicator:
  String brightnessLevel;
  if (ldrRawValue > 3500) {
    brightnessLevel = "Very Bright (Direct Sunlight)";
  } else if (ldrRawValue > 2500) {
    brightnessLevel = "Bright (Well-Lit Room)";
  } else if (ldrRawValue > 1000) {
    brightnessLevel = "Moderate (Cloudy Day/Indoor)";
  } else if (ldrRawValue > 200) {
    brightnessLevel = "Dim (Dusk/Low Light)";
  } else {
    brightnessLevel = "Dark (Night/Completely Covered)";
  }
  Serial.print("Estimated Brightness: ");
  Serial.println(brightnessLevel);

  Serial.println(); // Add a blank line for readability
  delay(1000);      // Wait for 1 second before the next reading
}
