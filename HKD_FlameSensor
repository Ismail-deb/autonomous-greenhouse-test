const int flameSensorAnalogPin = 35; // Connect the AO pin of your flame sensor to ESP32 GPIO35

// --- Global variables to store observed values for calibration ---
int noFlameValue = 0;
int flamePresentValue = 0;
bool calibrationMode = true; // Set to true to initially calibrate, then to false for normal operation

void setup() {
  Serial.begin(115200);
  Serial.println("ARD151E Flame Sensor - Analog Output (AO) Test");
  Serial.println("---------------------------------------------");
  Serial.println("--- Starting Calibration Mode ---");
  Serial.println("1. Cover the sensor completely (simulate NO flame).");
  Serial.println("2. Note the 'NO FLAME' value.");
  Serial.println("3. Expose to a safe flame (simulate FLAME).");
  Serial.println("4. Note the 'FLAME PRESENT' value.");
  Serial.println("5. Choose a threshold *between* these two values.");
  Serial.println("---------------------------------------------");
  delay(3000); // Give user time to read instructions
}

void loop() {
  int flameRawValue = analogRead(flameSensorAnalogPin);
  Serial.print("Current Analog Flame Value (AO): ");
  Serial.println(flameRawValue);

  // --- Step 1: Observe and determine the threshold ---
  // Based on your issue, we expect:
  // - NO FLAME (e.g., normal room light): High value (e.g., 4000-4095)
  // - FLAME PRESENT: Lower value (e.g., 1000-3000, or even lower)

  // After observing your sensor, you need to set a 'flameThreshold'
  // that is *between* the typical "no flame" value and the typical "flame present" value.
  // For example, if no flame is ~4000 and flame is ~2000, a threshold of 3000 would work.
  const int flameThreshold = 3000; // <<< YOU MUST ADJUST THIS VALUE!

  // --- Step 2: Implement the INVERTED logic ---
  // If the sensor value *drops below* the threshold, it means a flame is detected.
  if (flameRawValue < flameThreshold) {
    Serial.println(">>> *** FLAME DETECTED *** <<<");
    // Add your valuable insight actions here (e.g., alarm, notification, logging)
  } else {
    Serial.println("No significant flame detected (Value above threshold).");
  }

  Serial.println(); // Add a blank line for readability
  delay(500);       // Wait for 0.5 seconds before the next reading
}
